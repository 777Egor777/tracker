Сначала проанализируем работу программы через консольные утилиты.
1. Запустили работу Трекера.
2. С помощью команды jps узнали идентификатор процесса. Он равен 8632. Скрин: http://joxi.ru/RmzvLVJsYgKawm
3. С помощью команды jhsdb jmap --heap --pid 8632 вывели состояние кучи. Скрин: http://joxi.ru/Vrwp697u7L36Jm
Как видим, на данный момент в куче занято 11 Мб, и все в Eden.
4. Вызвали jstack, он вывел все процессы. Скрин: http://joxi.ru/82QWxNPTw0WBMr
5. Добавим 10 записей в трекер вручную через консольный интерфейс приложения в IDEA, посмотрим что поменяется.
Ничего не поменялось, было добавлено слишком мало объектов. Скрин: http://joxi.ru/brRdkpPF7ZEX72
6. Изменим gc на Serial, установим размер кучи в 30Мб, поставим опцию для вывода лога.
-XX:+UseSerialGC -Xlog:gc* -Xmx30m -Xms30m
Скрин: http://joxi.ru/vAWVNpPsgNokO2
7. Напишем метод, который будет добавлять N записей в трекер.
Скрин: http://joxi.ru/Y2L8REPu74onx2
8. Добавили 1000 объектов в трекер. Скрин: http://joxi.ru/l2Z3gQPFzdG8kA
Посмотрим, что с памятью. Скрин: http://joxi.ru/eAO5nNPU9Wo4Zm
Видим, что на данный момент заполнена часть Эдена, а значит gc пока не производилось.
Отсутствие вывода лога gc в консоли выполнения программы так же это подтверждает.
9. Завершим выполнение программы. Добавим в этот раз уже 50000 элементов.
Скрин: http://joxi.ru/4AkZk9Ksoa7MB2
Видим, что уже произошла сборка мусора. Скрин: http://joxi.ru/nAyedMNsg6lXMA
Посмотрим, что с памятью. Скрин: http://joxi.ru/KAgEOX6FEPxgZm
Видим, что часть объектов уже полдностью заполнена одна из Survivor space,
а часть элементов даже перекочевала в old generation.
10. Запустим jconsole. Выберем нужный локальный процесс. Скрин: http://joxi.ru/YmEq60Ptw1oZ1m
Видим, что расход памяти сначала растёт: http://joxi.ru/E2pMN9OC7E6BNA
А затем, наступает сборка мусора. http://joxi.ru/bmoB893F3g5MZr
Видим в консоли выполнения приложения, что сборки мусора действительно происходят.
http://joxi.ru/V2VG8gPIdZz06A
На графике это тоже наглядно видно: http://joxi.ru/xAe8ROQuRDnYW2
11. Остановим работу приложения
12. Теперь добъёмся выхода за пределы памяти и ошибки OutOfMemoryError
Для этого добавим 300000 записей.
Предварительно добавим опцию -XX:+HeapDumpOnOutOfMemoryError , чтобы при
переполнении памяти jvm сохраняла дамп программмы в файл с расширением .hprof
Видим ошибку OutOfMemory: http://joxi.ru/brRdkpPF7ZoJ62




